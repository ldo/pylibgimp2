This project came into existence after I discovered that
[GIMP](https://gimp.org/) had lost its Python support in Debian 11.

I understand that GIMP 3 is requiring a lot of work, and the Python
2-to-3 transition has not helped matters. Looking in a recent GIMP 2
source tree, I see that the files in the `plug-ins/pygimp` directory
total over 30,000 lines. That’s a lot of C code to have to rework to
bring the Python support up to date.

But I feel a lot of that is unnecessary. It is quite possible to
create wrappers for the libgimp API in Python itself, using the
ever-dependable
[`ctypes`](https://docs.python.org/3/library/ctypes.html) module. And
this can be done with substantially less code than doing it in C.

Hence this project. The aim is to let you write plugins for GIMP 2.x
in Python 3. In future, an adaptation of this project should be able
to work with GIMP 3 instead. Since GIMP plugins actually run as
executables in separate processes, it is completely independent of any
Python support that GIMP may or may not have, now or in the future.

A consequence of this is, since the libgimpxx libraries that I use
know nothing of Python, I cannot make use of the “standard” Python
wrappers for GLib/GTK (PyGTK for GTK 2.x, GObject Introspection for
later versions). I have to create my own, to interoperate with my
wrappers for the GIMP API.

This package also relies on Gabler, my wrappers for the GEGL and BABL
libraries, available from [GitLab](https://gitlab.com/ldo/gabler)
or [GitHub](https://github.com/ldo/gabler).

This is still a work in progress. I have only implemented a fraction of
the wrappers for the full GIMP API, not to mention GTK 2. So far the
code is complete enough to support my own simple plugins available on
[GitHub](https://github.com/ldo/gimp_filters). I may or may not continue
adding to it.

Anyway, for now, enjoy.

To see some small examples of this wrapper in use, have a look at
my `gimp_filters` project on [`GitLab`](https://gitlab.com/ldo/gimp_filters)
or [`GitHub`](https://github.com/ldo/gimp_filters).

Further note: I discovered (after having written the bulk of the above
code) that there is a GObject Introspection type library for GTK 2. So
I immediately thought that using this would save me a lot of work
creating my own ctypes-based Python wrappers for GTK classes. However,
when I try importing this via pygobject into Python 3, I get the
following warning:

    You have imported the Gtk 2.0 module. Because Gtk 2.0 was not
    designed for use with introspection some of the interfaces and API
    will fail. As such this is not supported by the pygobject
    development team and we encourage you to port your app to Gtk 3 or
    greater. PyGTK is the recomended python module to use with Gtk 2.0

The problem being, PyGTK was never made available for Python 3. So it
appears I am better off persevering with my approach of creating my
own Python wrappers, at least for GTK. GLib and GObject are still at
version 2.0, even with GTK 3 and 4, so it might be possible to use
the GEGL typelib, but I haven’t looked at this.

Lawrence D'Oliveiro <ldo@geek-central.gen.nz>
2023 April 12
